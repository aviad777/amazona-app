[{"C:\\dev\\react\\amazona\\frontend\\src\\index.js":"1","C:\\dev\\react\\amazona\\frontend\\src\\App.js":"2","C:\\dev\\react\\amazona\\frontend\\src\\reportWebVitals.js":"3","C:\\dev\\react\\amazona\\frontend\\src\\data.js":"4","C:\\dev\\react\\amazona\\frontend\\src\\components\\product.js":"5","C:\\dev\\react\\amazona\\frontend\\src\\components\\rating.js":"6","C:\\dev\\react\\amazona\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductScreen.js":"8","C:\\dev\\react\\amazona\\frontend\\src\\components\\Product.js":"9","C:\\dev\\react\\amazona\\frontend\\src\\components\\Rating.js":"10","C:\\dev\\react\\amazona\\frontend\\src\\components\\MessageBox.js":"11","C:\\dev\\react\\amazona\\frontend\\src\\components\\LoadingBox.js":"12","C:\\dev\\react\\amazona\\frontend\\src\\store.js":"13","C:\\dev\\react\\amazona\\frontend\\src\\reducers\\productReducers.js":"14","C:\\dev\\react\\amazona\\frontend\\src\\actions\\productAction.js":"15","C:\\dev\\react\\amazona\\frontend\\src\\constants\\productConstants.js":"16","C:\\dev\\react\\amazona\\frontend\\src\\screens\\CartScreen.js":"17","C:\\dev\\react\\amazona\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\dev\\react\\amazona\\frontend\\src\\constants\\cartConstants.js":"19","C:\\dev\\react\\amazona\\frontend\\src\\actions\\cartAction.js":"20","C:\\dev\\react\\amazona\\frontend\\src\\screens\\SigninScreen.js":"21","C:\\dev\\react\\amazona\\frontend\\src\\reducers\\userReducers.js":"22","C:\\dev\\react\\amazona\\frontend\\src\\constants\\userConstants.js":"23","C:\\dev\\react\\amazona\\frontend\\src\\actions\\userActions.js":"24","C:\\dev\\react\\amazona\\frontend\\src\\screens\\RegisterScreen.js":"25","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ShippingAddressScreen.js":"26","C:\\dev\\react\\amazona\\frontend\\src\\components\\CheckOutSteps.js":"27","C:\\dev\\react\\amazona\\frontend\\src\\screens\\PaymentMEthodScreen.js":"28","C:\\dev\\react\\amazona\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","C:\\dev\\react\\amazona\\frontend\\src\\screens\\PaymentMethodScreen.js":"30","C:\\dev\\react\\amazona\\frontend\\src\\constants\\orderConstants.js":"31","C:\\dev\\react\\amazona\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\dev\\react\\amazona\\frontend\\src\\actions\\orderActions.js":"33","C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderScreen.js":"34","C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderHistoryScreen.js":"35","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProfileScreen.js":"36","C:\\dev\\react\\amazona\\frontend\\src\\components\\PrivateRoute.js":"37","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductListScreen.js":"38","C:\\dev\\react\\amazona\\frontend\\src\\components\\AdminRoute.js":"39","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductEditScreen.js":"40","C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderListScreen.js":"41","C:\\dev\\react\\amazona\\frontend\\src\\screens\\UserListScreen.js":"42","C:\\dev\\react\\amazona\\frontend\\src\\screens\\UserEditScreen.js":"43","C:\\dev\\react\\amazona\\frontend\\src\\components\\SellerRoute.js":"44","C:\\dev\\react\\amazona\\frontend\\src\\screens\\SellerScreen.js":"45","C:\\dev\\react\\amazona\\frontend\\src\\components\\SearchBox.js":"46","C:\\dev\\react\\amazona\\frontend\\src\\screens\\SearchScreen.js":"47","C:\\dev\\react\\amazona\\frontend\\src\\utils.js":"48","C:\\dev\\react\\amazona\\frontend\\src\\screens\\MapScreen.js":"49"},{"size":616,"mtime":1608473469121,"results":"50","hashOfConfig":"51"},{"size":8789,"mtime":1614516083713,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":499162500000,"results":"53","hashOfConfig":"51"},{"size":2792,"mtime":1614244082431,"results":"54","hashOfConfig":"51"},{"size":787,"mtime":1608215637419,"results":"55","hashOfConfig":"51"},{"size":881,"mtime":1608215621804,"results":"56","hashOfConfig":"51"},{"size":3199,"mtime":1614511306929,"results":"57","hashOfConfig":"51"},{"size":11197,"mtime":1613993674707,"results":"58","hashOfConfig":"51"},{"size":1356,"mtime":1614619029808,"results":"59","hashOfConfig":"51"},{"size":1167,"mtime":1613909189484,"results":"60","hashOfConfig":"51"},{"size":210,"mtime":1608463222355,"results":"61","hashOfConfig":"51"},{"size":197,"mtime":1609673978919,"results":"62","hashOfConfig":"51"},{"size":2643,"mtime":1614083733769,"results":"63","hashOfConfig":"51"},{"size":3932,"mtime":1614247148148,"results":"64","hashOfConfig":"51"},{"size":5236,"mtime":1614509285046,"results":"65","hashOfConfig":"51"},{"size":1679,"mtime":1613985730929,"results":"66","hashOfConfig":"51"},{"size":4521,"mtime":1612969363689,"results":"67","hashOfConfig":"51"},{"size":1358,"mtime":1612969601917,"results":"68","hashOfConfig":"51"},{"size":297,"mtime":1612969633129,"results":"69","hashOfConfig":"51"},{"size":1565,"mtime":1612969579244,"results":"70","hashOfConfig":"51"},{"size":2793,"mtime":1613309230787,"results":"71","hashOfConfig":"51"},{"size":4634,"mtime":1614083620348,"results":"72","hashOfConfig":"51"},{"size":1967,"mtime":1614083052924,"results":"73","hashOfConfig":"51"},{"size":5984,"mtime":1614244082405,"results":"74","hashOfConfig":"51"},{"size":3869,"mtime":1609849541113,"results":"75","hashOfConfig":"51"},{"size":5063,"mtime":1614168630958,"results":"76","hashOfConfig":"51"},{"size":456,"mtime":1609688336488,"results":"77","hashOfConfig":"51"},{"size":1872,"mtime":1609757758060,"results":"78","hashOfConfig":"51"},{"size":7059,"mtime":1609866979313,"results":"79","hashOfConfig":"51"},{"size":1832,"mtime":1609849541113,"results":"80","hashOfConfig":"51"},{"size":1546,"mtime":1612174452821,"results":"81","hashOfConfig":"51"},{"size":3938,"mtime":1614516827650,"results":"82","hashOfConfig":"51"},{"size":5918,"mtime":1614595966605,"results":"83","hashOfConfig":"51"},{"size":10995,"mtime":1612971072861,"results":"84","hashOfConfig":"51"},{"size":2689,"mtime":1610635776878,"results":"85","hashOfConfig":"51"},{"size":8498,"mtime":1613314263458,"results":"86","hashOfConfig":"51"},{"size":650,"mtime":1613055612918,"results":"87","hashOfConfig":"51"},{"size":5194,"mtime":1614249416472,"results":"88","hashOfConfig":"51"},{"size":644,"mtime":1611478235354,"results":"89","hashOfConfig":"51"},{"size":8651,"mtime":1614618888924,"results":"90","hashOfConfig":"51"},{"size":4866,"mtime":1614596373181,"results":"91","hashOfConfig":"51"},{"size":3417,"mtime":1612440982983,"results":"92","hashOfConfig":"51"},{"size":4737,"mtime":1612441669539,"results":"93","hashOfConfig":"51"},{"size":646,"mtime":1612457482961,"results":"94","hashOfConfig":"51"},{"size":3675,"mtime":1612882718829,"results":"95","hashOfConfig":"51"},{"size":677,"mtime":1613487720641,"results":"96","hashOfConfig":"51"},{"size":7750,"mtime":1614248591965,"results":"97","hashOfConfig":"51"},{"size":632,"mtime":1613669986348,"results":"98","hashOfConfig":"51"},{"size":4334,"mtime":1614165185446,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1g07ku7",{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"102"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"102"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"102"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"102"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"102"},"C:\\dev\\react\\amazona\\frontend\\src\\index.js",[],["215","216"],"C:\\dev\\react\\amazona\\frontend\\src\\App.js",["217","218"],"\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { signout } from './actions/userActions';\nimport CartScreen from './screens/CartScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport PaymentMEthodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport PrivateRoute from './components/PrivateRoute';\nimport AdminRoute from './components/AdminRoute';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport { addToCart } from './actions/cartAction';\nimport OrderListScreen from './screens/OrderListScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport SellerRoute from './components/SellerRoute';\nimport SellerScreen from './screens/SellerScreen';\nimport SearchBox from './components/SearchBox';\nimport SearchScreen from './screens/SearchScreen';\nimport { listProductCategories, listProducts } from './actions/productAction';\nimport LoadingBox from './components/LoadingBox';\nimport MessageBox from './components/MessageBox';\nimport MapScreen from './screens/MapScreen';\n\nfunction App() {\n  const cart = useSelector(state => state.cart);\n  const [sidebarIsOpen, setSidebarIsOpen] = useState(false);\n  const { cartItems } = cart;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  console.log('app user: ', userInfo);\n  const dispatch = useDispatch();\n  const signoutHandler = () => {\n    dispatch(signout());\n  }\n\n  const productCategoryList = useSelector(state => state.productCategoryList);\n  const { loading: loadingCategories, error: errorCategories, categories } = productCategoryList;\n\n  useEffect(() => {\n    dispatch(listProductCategories());\n  }, [dispatch]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"grid-container\">\n        <header className=\"row\">\n          <div>\n            <button\n              type=\"button\"\n              className=\"open-sidebar\"\n              onClick={() => setSidebarIsOpen(true)}\n            >\n              <i className=\"fa fa-bars\"></i>\n            </button>\n\n            <Link className=\"brand\" to=\"/\">amazona</Link>\n          </div>\n          <div>\n            <Route render={({ history }) => <SearchBox history={history}></SearchBox>}></Route>\n          </div>\n          <div>\n            <Link to=\"/cart\">Cart\n            {cartItems.length > 0 && (\n                <span className=\"badge\">{cartItems.length}</span>\n              )}\n            </Link>\n            {\n              userInfo ? (\n                <div className=\"dropdown\">\n                  <Link to=\"#\">{userInfo.name}<i className=\"fa fa-caret-down\"></i></Link>\n                  <ul className=\"dropdown-content\">\n                    <li>\n                      <Link to=\"/profile\">User Profile</Link>\n                    </li>\n                    <li>\n                      <Link to=\"/orderhistory\">Order History</Link>\n                    </li>\n                    <li><Link to=\"#signout\" onClick={signoutHandler}>Sign Out</Link></li>\n\n                  </ul>\n                </div>\n              ) : (\n\n                  <Link to=\"/signin\">Sign in</Link>\n                )\n            }\n            {userInfo && userInfo.isSeller && (\n              <div className=\"dropdown\">\n                <Link to=\"#seller\">\n                  Seller {''} <i className=\"fa fa-caret-down\"></i>\n                </Link>\n                <ul className=\"dropdown-content\">\n\n                  <li>\n                    <Link to=\"/productlist/seller\">Products</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderlist/seller\">Orders</Link>\n                  </li>\n                </ul>\n              </div>\n            )}\n\n            {userInfo && userInfo.isAdmin && (\n              <div className=\"dropdown\">\n                <Link to=\"#admin\">\n                  Admin {''} <i className=\"fa fa-caret-down\"></i>\n                </Link>\n                <ul className=\"dropdown-content\">\n                  <li>\n                    <Link to=\"/dashboard\">Dashboard</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/productlist\">Products</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/orderlist\">Orders</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/userlist\">Users</Link>\n                  </li>\n\n                </ul>\n              </div>\n            )}\n\n\n\n          </div>\n        </header>\n        <aside className={sidebarIsOpen ? 'open' : ''}>\n          <ul className=\"categories\">\n            <li>\n              <strong>Categories</strong>\n              <button\n                onClick={() => setSidebarIsOpen(false)}\n                className=\"close-sidebar\"\n                type=\"button\"\n              >\n                <i className=\"fa fa-close\"></i>\n              </button>\n            </li>\n            {loadingCategories ? (<LoadingBox></LoadingBox>)\n              :\n              errorCategories ? (<MessageBox variant=\"danger\">{errorCategories}</MessageBox>)\n                : (\n                  <ul>\n                    {categories.map(c => (\n                      <li key={c}>\n                        <Link\n                          to={`/search/category/${c}`}\n                          onClick={() => setSidebarIsOpen(false)}\n                        >\n                          {c}\n                        </Link>\n\n                      </li>\n                    ))}\n                  </ul>\n                )\n\n            }\n\n          </ul>\n\n        </aside>\n        <main>\n          <Route path=\"/seller/:id\" component={SellerScreen}></Route>\n          <Route path=\"/cart/:id?\" component={CartScreen}></Route>\n          <Route path=\"/product/:id\" component={ProductScreen} exact></Route>\n          <Route path=\"/product/:id/edit\" component={ProductEditScreen} exact></Route>\n          <Route path=\"/signin\" component={SigninScreen}></Route>\n          <Route path=\"/register\" component={RegisterScreen}></Route>\n          <Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n          <Route path=\"/payment\" component={PaymentMEthodScreen}></Route>\n          <Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n          <Route path=\"/order/:id\" component={OrderScreen}></Route>\n          <Route path=\"/orderhistory\" component={OrderHistoryScreen} exact></Route>\n          <Route path=\"/search/name/:name?\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name?\" component={SearchScreen} exact></Route>\n          <Route path=\"/search/category/:category/name/:name?/min/:min/max/:max/rating/:rating/order/:order/pageNumber/:pageNumber\" component={SearchScreen} exact></Route>\n          <PrivateRoute path=\"/profile\" component={ProfileScreen} exact></PrivateRoute>\n          <PrivateRoute path=\"/map\" component={MapScreen} exact></PrivateRoute>\n          <AdminRoute path=\"/productlist\" component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/productlist/pageNumber/:pageNumber\" component={ProductListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/orderlist\" component={OrderListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/orderlist/pageNumber/:pageNumber\" component={OrderListScreen} exact></AdminRoute>\n          <AdminRoute path=\"/userlist\" component={UserListScreen}></AdminRoute>\n          <AdminRoute path=\"/user/:id/edit\" component={UserEditScreen}></AdminRoute>\n          <SellerRoute path=\"/productlist/seller\" component={ProductListScreen}></SellerRoute>\n          <SellerRoute path=\"/orderlist/seller\" component={OrderListScreen}></SellerRoute>\n          <SellerRoute path=\"/orderlist/pageNumber/:pageNumber/seller\" component={OrderListScreen} exact></SellerRoute>\n          <Route path=\"/\" component={HomeScreen} exact></Route>\n        </main>\n        <footer className=\"row center\">\n          All right reserved.\n        </footer>\n      </div>\n    </BrowserRouter>\n  )\n};\n\nexport default App;\n","C:\\dev\\react\\amazona\\frontend\\src\\reportWebVitals.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\data.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\product.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\rating.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\Product.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\Rating.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\MessageBox.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\LoadingBox.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\store.js",["219","220","221"],"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createProduct } from './actions/productAction';\r\nimport data from './data';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDeleteReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMineListReducer, orderPayReducer } from './reducers/orderReducers';\r\nimport { productListReducer, productDetailsReducer, productCreateReducer, productUpdateReducer, productDeleteReducer, productCategoryListReducer, productReviewCreateReducer } from './reducers/productReducers';\r\nimport { userAddressMapReducer, userDeleteReducer, userDetailsReducer, userListReducer, userRegisterReducer, userSigninReducer, userTopSellerListReducer, userTopSellersListReducer, userUpdateProfileReducer, userUpdateReducer } from './reducers/userReducers';\r\n\r\n\r\n\r\nconst initialState = {\r\n    userSignin: {\r\n        userInfo: localStorage.getItem('userInfo')\r\n            ? JSON.parse(localStorage.getItem('userInfo')) : null,\r\n    },\r\n    cart: {\r\n        cartItems:\r\n            localStorage.getItem('cartItems')\r\n                ? JSON.parse(localStorage.getItem('cartItems'))\r\n                : [],\r\n        shippingAddress: localStorage.getItem('shippingAddress')\r\n            ? JSON.parse(localStorage.getItem('shippingAddress')) : {},\r\n        paymentMethod: 'PayPal'\r\n    }\r\n};\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productCategoryList: productCategoryListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderMineList: orderMineListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    orderList: orderListReducer,\r\n    orderDelete: orderDeleteReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userTopSellersList: userTopSellersListReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    userAddressMap: userAddressMapReducer\r\n\r\n})\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nexport default store;","C:\\dev\\react\\amazona\\frontend\\src\\reducers\\productReducers.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\actions\\productAction.js",["222","223"],"import Axios from \"axios\";\r\nimport { PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_REQUEST, PRODUCT_CATEGORY_LIST_SUCCESS, PRODUCT_CATEGORY_LIST_FAIL, PRODUCT_REVIEW_CREATE_REQUEST, PRODUCT_REVIEW_CREATE_SUCCESS, PRODUCT_REVIEW_CREATE_FAIL } from \"../constants/productConstants\"\r\n\r\nexport const listProducts = ({\r\n    pageNumber = '',\r\n    seller = '',\r\n    name = '',\r\n    category = '',\r\n    order = '',\r\n    min = 0,\r\n    max = 0,\r\n    rating = 0,\r\n\r\n\r\n}) => async (dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await Axios.get(\r\n            `/api/products?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&order=${order}`);\r\n        console.log('product list data:', data);\r\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nexport const listProductCategories = () => async (dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_CATEGORY_LIST_REQUEST\r\n    });\r\n    try {\r\n\r\n        const { data } = await Axios.get('/api/products/categories');\r\n        dispatch({ type: PRODUCT_CATEGORY_LIST_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: PRODUCT_CATEGORY_LIST_FAIL, payload: error.message });\r\n    }\r\n}\r\n\r\n\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try {\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL, payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n\r\n        //Axios injects url to current url if u dont give it the full url\r\n        const { data } = await Axios.post(`http://localhost:3000/api/products`, {}, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data.product })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ?\r\n            error.response.data.message : error.message;\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL, payload: message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`http://localhost:3000/api/products/${product._id}`, product, {\r\n            headers: { Authorization: `bearer ${userInfo.token}` }\r\n        })\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ?\r\n            error.response.data.message : error.message;\r\n        dispatch({ type: PRODUCT_UPDATE_FAIL, error: message })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.delete(`http://localhost:3000/api/products/${productId}`, {\r\n            headers: { Authorization: `bearer ${userInfo.token}` }\r\n        })\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n\r\n        const message = error.response && error.response.data.message ?\r\n            error.response.data.message : error.message;\r\n        dispatch({ type: PRODUCT_DELETE_FAIL, payload: message });\r\n    }\r\n}\r\n\r\n\r\nexport const createReview = (productId, review) => async (dispatch, getState) => {\r\n\r\n    dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n\r\n        //Axios injects url to current url if u dont give it the full url\r\n        const { data } = await Axios.post(`http://localhost:3000/api/products/${productId}/reviews`, review, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        });\r\n\r\n\r\n        dispatch({ type: PRODUCT_REVIEW_CREATE_SUCCESS, payload: data.product })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ?\r\n            error.response.data.message : error.message;\r\n        dispatch({\r\n            type: PRODUCT_REVIEW_CREATE_FAIL, payload: message\r\n        })\r\n    }\r\n}","C:\\dev\\react\\amazona\\frontend\\src\\constants\\productConstants.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\CartScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\constants\\cartConstants.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\actions\\cartAction.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\SigninScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\reducers\\userReducers.js",["224"],"import { USER_ADDRESS_MAP_CONFIRM, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_RESET, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_DETAILS_SUCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCESS, USER_SIGNOUT, USER_TOPSELLERS_LIST_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNIN_SUCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_SIGNIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_SIGNOUT:\r\n            return {};\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { loading: true }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return {};\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [], loading: true }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DELETE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userTopSellersListReducer = (state = { users: [], loading: true }, action) => {\r\n\r\n    switch (action.type) {\r\n        case USER_TOPSELLERS_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_TOPSELLERS_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_TOPSELLERS_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userAddressMapReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_ADDRESS_MAP_CONFIRM:\r\n            return { address: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","C:\\dev\\react\\amazona\\frontend\\src\\constants\\userConstants.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\actions\\userActions.js",["225"],"import Axios from \"axios\";\r\nimport { USER_DELETE_FAIL, USER_RESET_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_TOPSELLERS_LIST_FAIL, USER_TOPSELLERS_LIST_REQUEST, USER_TOPSELLERS_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCESS, USER_SIGNOUT, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from \"../constants/userConstants\"\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/register', { name, email, password });\r\n        dispatch({ type: USER_REGISTER_SUCESS, payload: data });\r\n        dispatch({ type: USER_SIGNIN_SUCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL, payload:\r\n                err.response && err.response.data.message\r\n                    ? err.response.data.message : err.message,\r\n        })\r\n    }\r\n}\r\nexport const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const { data } = await Axios.post('/api/users/signin', { email, password });\r\n        dispatch({ type: USER_SIGNIN_SUCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL, payload: message\r\n        })\r\n    }\r\n}\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    localStorage.removeItem('shippingAddress');\r\n    dispatch({\r\n        type: USER_SIGNOUT\r\n    });\r\n}\r\n\r\n\r\nexport const detailsUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get(`/api/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${userInfo?.token}` }\r\n        });\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message\r\n\r\n        dispatch({ type: USER_DETAILS_FAIL, payload: message });\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/users/profile`, user, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        })\r\n        dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n        dispatch({ type: USER_SIGNIN_SUCESS, payload: data });\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    dispatch({ type: USER_LIST_REQUEST });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.get('/api/users', {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        })\r\n\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data });\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({ type: USER_LIST_FAIL, payload: message });\r\n    }\r\n}\r\n\r\n\r\nexport const deleteUser = (userId) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_DELETE_REQUEST, payload: userId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.delete(`/api/users/${userId}`, {\r\n            headers: { Authorization: `bearer ${userInfo.token}` }\r\n        })\r\n        dispatch({ type: USER_DELETE_SUCCESS, payload: data });\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({ type: USER_DELETE_FAIL, payload: message });\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    dispatch({ type: USER_UPDATE_REQUEST, payload: user });\r\n    const { userSignin: { userInfo } } = getState();\r\n    try {\r\n        const { data } = await Axios.put(`/api/users/${user._id}`, user, {\r\n            headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        })\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({ type: USER_UPDATE_FAIL, payload: message });\r\n    }\r\n}\r\n\r\n\r\nexport const listTopSellers = () => async (dispatch) => {\r\n    dispatch({ type: USER_TOPSELLERS_LIST_REQUEST });\r\n    try {\r\n        const { data } = await Axios.get('/api/users/top-sellers');\r\n\r\n        dispatch({ type: USER_TOPSELLERS_LIST_SUCCESS, payload: data });\r\n    } catch (err) {\r\n        const message = err.response && err.response.data.message\r\n            ? err.response.data.message : err.message;\r\n        dispatch({ type: USER_TOPSELLERS_LIST_FAIL, payload: message });\r\n    }\r\n}","C:\\dev\\react\\amazona\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\ShippingAddressScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\CheckOutSteps.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\PaymentMEthodScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\PaymentMethodScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\constants\\orderConstants.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\actions\\orderActions.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderScreen.js",["226","227"],"import Axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deliverOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELIVER_RESET, ORDER_PAYMENT_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderScreen(props) {\r\n\r\n\r\n    const orderId = props.match.params.id;\r\n    //hook for getting paypal SDK\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const {\r\n        loading: loadingPay,\r\n        error: errorPay,\r\n        success: successPay\r\n    } = orderPay;\r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const {\r\n        loading: loadingDeliver,\r\n        error: errorDeliver,\r\n        success: successDeliver\r\n    } = orderDeliver;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const addPayPalScript = async () => {\r\n            const { data } = await Axios.get('/api/config/paypal');\r\n            //data contains client ID which is in env\r\n            const script = document.createElement('script');\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n            script.async = true;\r\n            // onload happens after script is downloaded and ready to use.\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n        console.log('order: ', order, ' successPay: ', successPay, ' SDK: ', sdkReady);\r\n        // if order is not loaded\r\n        if (!order || successPay || successDeliver || (order && order._id !== orderId)) {\r\n            console.log('checking order....');\r\n            dispatch({ type: ORDER_PAYMENT_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n            dispatch(detailsOrder(orderId));\r\n        }\r\n        else {\r\n            //now we have the order\r\n            if (!order.isPaid) {\r\n                // if it isnt paid, load paypal, if windows.paypal contains value, paypal is already loaded\r\n                if (!window.paypal) {\r\n                    addPayPalScript();\r\n                } else {\r\n                    setSdkReady(true);\r\n                }\r\n            }\r\n        }\r\n        //In the brackets are the dependecies of the function for refreshing after state is changed\r\n    }, [dispatch, orderId, order, sdkReady, successPay, successDeliver]);\r\n\r\n    // payment result is the result we get from PAYPAL!!!!!\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(order, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order._id));\r\n    }\r\n\r\n    return loading ? (<LoadingBox></LoadingBox>) : error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n        : (\r\n            <div>\r\n                <h1>Order {order._id}</h1>\r\n                <div className=\"row top\">\r\n                    <div className=\"col-2\">\r\n                        <ul>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h2>\r\n                                        Shipping\r\n                                    </h2>\r\n                                    <p>\r\n                                        <strong>Name:</strong>{order.shippingAddress.fullName} <br />\r\n                                        <strong>Address:</strong>\r\n                                        {order.shippingAddress.address},\r\n                                        {order.shippingAddress.city},\r\n                                        {order.shippingAddress.postalCode},\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n                                    {order.isDelivered ? (\r\n                                        <MessageBox variant=\"success\">\r\n                                            Delivered at {order.deliveredAt}\r\n                                        </MessageBox>\r\n                                    ) : (\r\n                                            <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                                        )}\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h2>\r\n                                        Payment\r\n                                    </h2>\r\n                                    <p>\r\n                                        <strong>Name:</strong>{order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <MessageBox variant=\"success\">\r\n                                            Paid at {order.paidAt}\r\n                                        </MessageBox>\r\n                                    ) : (\r\n                                            <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                                        )}\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className=\"card card-body\">\r\n                                    <h2>\r\n                                        Order Items\r\n                                </h2>\r\n                                    <ul>\r\n                                        {\r\n                                            order.orderItems.map(item =>\r\n                                            (\r\n                                                <li key={item.product}>\r\n                                                    <div className=\"row\">\r\n                                                        <div>\r\n                                                            <img\r\n                                                                src={item.image}\r\n                                                                alt={item.name}\r\n                                                                className=\"small\"\r\n                                                            ></img>\r\n                                                        </div>\r\n                                                        <div className=\"min-30\">\r\n                                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                        </div>\r\n                                                        <div>${item.qty} x ${item.price} = ${item.qty * item.price}</div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            )\r\n                                            )\r\n                                        }\r\n                                    </ul>\r\n\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-1\">\r\n                        <div className=\"card card-body\">\r\n                            <ul>\r\n                                <li>\r\n                                    <h2>Order Summary</h2>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>items</div>\r\n                                        <div><strong>${order.itemsPrice.toFixed(2)}</strong></div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Shipping</div>\r\n                                        <div>${order.shippingPrice.toFixed(2)}</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Tax</div>\r\n                                        <div>${order.taxPrice.toFixed(2)}</div>\r\n                                    </div>\r\n                                </li>\r\n                                <li>\r\n                                    <div className=\"row\">\r\n                                        <div>Total</div>\r\n                                        <div><strong>${order.totalPrice.toFixed(2)}</strong></div>\r\n                                    </div>\r\n                                </li>\r\n                                {\r\n                                    // is sdk ready is false paypal isnt loaded yey\r\n                                    // if it is ready show the paypal button with the amount of order.totalPrice\r\n                                    !order.isPaid && (\r\n                                        <li>\r\n                                            {!sdkReady ? (<LoadingBox></LoadingBox>) :\r\n                                                (\r\n                                                    <>\r\n                                                        {errorPay && (<MessageBox variant=\"danger\">{errorPay}</MessageBox>)}\r\n                                                        {loadingPay && <LoadingBox></LoadingBox>}\r\n                                                        <PayPalButton\r\n                                                            amount={order.totalPrice}\r\n                                                            onSuccess={successPaymentHandler}\r\n                                                        ></PayPalButton>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n                                        </li>\r\n                                    )\r\n                                }\r\n                                {userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                    <li>\r\n                                        <button type=\"button\" className=\"primary block\" onClick={deliverHandler}>Deliver Order</button>\r\n                                    </li>\r\n                                )}\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderHistoryScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\components\\PrivateRoute.js",["228"],"import React, { Component } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\n// this is a wrpapper on route and renders  a component only if he signs in\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    console.log('private route', userInfo);\r\n    return (\r\n        <Route {...rest} render={(props) => userInfo ?\r\n            (<Component {...props}></Component>) :\r\n            (<Redirect to=\"/signin\"></Redirect>)} >\r\n        </Route>\r\n\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductListScreen.js",["229","230"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { createProduct, deleteProduct, listProducts } from '../actions/productAction';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { PRODUCT_CREATE_RESET, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_RESET } from '../constants/productConstants';\r\n\r\nexport default function ProductListScreen(props) {\r\n    const {\r\n        pageNumber = 1\r\n    } = useParams();\r\n\r\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productCreate = useSelector(state => state.productCreate);\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\r\n\r\n    const productDelete = useSelector(state => state.productDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: PRODUCT_CREATE_RESET });\r\n            props.history.push(`/product/${createdProduct._id}/edit`);\r\n        }\r\n        if (successDelete) {\r\n            dispatch({ type: PRODUCT_DELETE_RESET });\r\n        }\r\n        dispatch(listProducts({ seller: sellerMode ? userInfo._id : '', pageNumber }));\r\n    }, [dispatch, createdProduct, props.history, successCreate, successDelete, userInfo._id, pageNumber]);\r\n\r\n    const deleteHandler = (product) => {\r\n        dispatch(deleteProduct(product._id));\r\n    }\r\n    const createHandler = () => {\r\n        dispatch(createProduct());\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <h1>Products</h1>\r\n                <button type=\"button\" className=\"primary\" onClick={createHandler}>\r\n                    Create Product\r\n                </button>\r\n\r\n            </div>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n\r\n            {loadingCreate && <LoadingBox></LoadingBox>}\r\n            {errorCreate && <MessageBox variant=\"danger\">{errorCreate}</MessageBox>}\r\n            {\r\n                loading ? <LoadingBox></LoadingBox>\r\n                    :\r\n                    error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                        :\r\n                        <>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>PRICE</th>\r\n                                        <th>CATEGORY</th>\r\n                                        <th>BRAND</th>\r\n                                        <th>ACTIONS</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {products.map(product => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>{product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n                                            <td>\r\n                                                <button type=\"button\" className=\"small\"\r\n                                                    onClick={() => props.history.push(`/product/${product._id}/edit`)}>Edit\r\n                                            </button>\r\n                                                <button type=\"button\" className=\"small\" onClick={() => deleteHandler(product)}>\r\n                                                    Delete\r\n                                            </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"row center pagination\">\r\n                                {\r\n                                    [...Array(pages).keys()].map(x => (\r\n                                        <Link className={(x + 1) === page ? 'active' : ''} key={x + 1} to={`/productlist/pageNumber/${x + 1}`}>\r\n                                            {x + 1}\r\n                                        </Link>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                        </>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\components\\AdminRoute.js",["231"],"import React, { Component } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\n// this is a wrpapper on route and renders  a component only if he signs in\r\n\r\nexport default function AdminRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <Route {...rest} render={(props) =>\r\n            userInfo && userInfo.isAdmin ?\r\n                (<Component {...props}></Component>) :\r\n                (<Redirect to=\"/signin\"></Redirect>)} >\r\n        </Route>\r\n\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\ProductEditScreen.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\OrderListScreen.js",["232","233"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { DeleteOrder, listOrders } from '../actions/orderActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { ORDER_DELTE_RESET } from '../constants/orderConstants';\r\n\r\nexport default function OrderListScreen(props) {\r\n\r\n    const {\r\n        pageNumber = 1\r\n    } = useParams();\r\n\r\n\r\n\r\n    const sellerMode = props.match.path.indexOf('/seller') >= 0;\r\n    const orderList = useSelector(state => state.orderList);\r\n    const { loading, error, orders, page, pages } = orderList;\r\n    // const orders2 = orders.map(order => { return order.isDelivered });\r\n    // console.log('orders2', orders2);\r\n    const orderDelete = useSelector(state => state.orderDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = orderDelete;\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n\r\n        dispatch({ type: ORDER_DELTE_RESET })\r\n        dispatch(listOrders({ seller: sellerMode ? userInfo._id : '', pageNumber }));\r\n    }, [dispatch, successDelete, pageNumber]);\r\n\r\n    const deleteHandler = (order) => {\r\n        if (window.confirm('Are you sure to delete')) {\r\n            dispatch(DeleteOrder(order._id));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Orders</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\" >{errorDelete}</MessageBox>}\r\n            {\r\n\r\n                loading ? <LoadingBox></LoadingBox> :\r\n                    error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                        :\r\n                        (\r\n                            <>\r\n                                <table className=\"table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>USER</th>\r\n                                            <th>TOTAL</th>\r\n                                            <th>PAID</th>\r\n                                            <th>DELIVERED</th>\r\n                                            <th>ACTIONS</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            orders.map((order) =>\r\n                                            (\r\n\r\n                                                <tr key={order._id}>\r\n                                                    <td>{order._id}</td>\r\n                                                    <td>{order.user.name}</td>\r\n                                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                                    <td>{order.totalPrice.toFixed(2)}</td>\r\n                                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\r\n                                                    <td>{order.isDelivered && order.deliverdAt ? order.deliverdAt.substring(0, 10) : 'No'}</td>\r\n                                                    <td><button type=\"button\" className=\"small\"\r\n                                                        onClick={() => { props.history.push(`/order/${order._id}`) }}>Details\r\n                                                    </button>\r\n                                                        <button type=\"button\" className=\"small\" onClick={() => deleteHandler(order)}>Delete\r\n                                                    </button>\r\n\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className=\"row center pagination\">\r\n                                    {\r\n                                        [...Array(pages).keys()].map(x => (\r\n                                            <Link className={(x + 1) === pageNumber ? 'active' : ''} key={x + 1} to={`/orderlist/pageNumber/${x + 1}`}>\r\n                                                {x + 1}\r\n                                            </Link>\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                        )}\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\UserListScreen.js",["234"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteUser, listUsers } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nexport default function UserListScreen(props) {\r\n\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n    const dispatch = useDispatch();\r\n    const userDelete = useSelector(state => state.userDelete);\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = userDelete;\r\n\r\n    const deleteHandler = (user) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(user._id));\r\n        }\r\n    }\r\n\r\n    const editHandler = (user) => {\r\n        // todo\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listUsers());\r\n        dispatch({ type: USER_DETAILS_RESET });\r\n    }, [dispatch, successDelete]);\r\n    return (\r\n        <div>\r\n            <h1>User List</h1>\r\n            {loadingDelete && <LoadingBox></LoadingBox>}\r\n            {errorDelete && <MessageBox variant=\"danger\">{errorDelete}</MessageBox>}\r\n            {successDelete && <MessageBox variant=\"success\">User deleted successfully</MessageBox>}\r\n            {\r\n                loading ? (<LoadingBox></LoadingBox>)\r\n                    :\r\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>) :\r\n                        (\r\n                            <table>\r\n                                <thead>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>IS SELLER</th>\r\n                                    <th>IS ADMIN</th>\r\n                                    <th>ACTIONS</th>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.map((user) => (\r\n                                            <tr key={user._id}>\r\n                                                <td>{user._id}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>{user.isSeller ? 'YES' : 'NO'}</td>\r\n                                                <td>{user.isAdmin ? 'YES' : 'NO'}</td>\r\n                                                <td>\r\n                                                    <button type=\"button\" className=\"small\"\r\n                                                        onClick={() => props.history.push(`/user/${user._id}/edit`)}>Edit</button>\r\n                                                    <button type=\"button\" className=\"small\"\r\n                                                        onClick={() => deleteHandler(user)}>Delete</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        )\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\UserEditScreen.js",["235","236"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsUser, updateUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport MessageBox from '../components/MessageBox'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport { userDeleteReducer } from '../reducers/userReducers';\r\n\r\nexport default function UserEditScreen(props) {\r\n    const userId = props.match.params.id;\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isSeller, setIsSeller] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate);\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            props.history.push('/userlist');\r\n        }\r\n        if (!user) {\r\n            dispatch(detailsUser(userId));\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setIsSeller(user.isSeller);\r\n            setIsAdmin(user.isAdmin);\r\n        }\r\n    }, [dispatch, user, userId, successUpdate]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name, email, isSeller, isAdmin\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"form\" onSubmit={submitHandler}>\r\n                <div>\r\n                    <h1>Edit User {name}</h1>\r\n                    {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    {errorUpdate && <MessageBox variant=\"danger\">{errorUpdate} </MessageBox>}\r\n\r\n                </div>\r\n                {\r\n                    loading ? <LoadingBox />\r\n                        :\r\n                        error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :\r\n                            <>\r\n                                <div>\r\n                                    <label htmlFor=\"name\">Name</label>\r\n                                    <input\r\n                                        id=\"name\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter name\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}>\r\n                                    </input>\r\n                                </div>\r\n                                <div>\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input\r\n                                        id=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}>\r\n                                    </input>\r\n                                    <div>\r\n                                        <label htmlFor=\"isSeller\">Is Seller</label>\r\n                                        <input\r\n                                            id=\"isSeller\"\r\n                                            type=\"checkbox\"\r\n                                            checked={isSeller}\r\n                                            onChange={(e) => setIsSeller(e.target.checked)}>\r\n                                        </input>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label htmlFor=\"isAdmin\">Is Admin</label>\r\n                                        <input\r\n                                            id=\"isAdmin\"\r\n                                            type=\"checkbox\"\r\n                                            checked={isAdmin}\r\n                                            onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                                        </input>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button type=\"submit\" className=\"small primary\">Submit</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\components\\SellerRoute.js",["237"],"import React, { Component } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\n// this is a wrpapper on route and renders  a component only if he signs in\r\n\r\nexport default function SellerRoute({ component: Component, ...rest }) {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    return (\r\n        <Route {...rest} render={(props) =>\r\n            userInfo && userInfo.isSeller ?\r\n                (<Component {...props}></Component>) :\r\n                (<Redirect to=\"/signin\"></Redirect>)} >\r\n        </Route>\r\n\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\screens\\SellerScreen.js",["238"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productAction';\r\nimport { detailsUser } from '../actions/userActions';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Product from '../components/Product';\r\nimport Rating from '../components/Rating';\r\nimport rating from '../components/Rating';\r\n\r\nexport default function SellerScreen(props) {\r\n    const sellerId = props.match.params.id;\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading: loadingProducts, error: errorProducts, products } = productList;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(detailsUser(sellerId));\r\n        dispatch(listProducts({ seller: sellerId }));\r\n\r\n    }, [dispatch, sellerId])\r\n    return (\r\n        <div className=\"row top\">\r\n            <div className=\"col-1\">\r\n                {\r\n                    loading ? <LoadingBox></LoadingBox>\r\n                        :\r\n                        error ? <MessageBox variant=\"danger\">{error}</MessageBox>\r\n                            :\r\n                            (\r\n                                <ul className=\"card card-body\">\r\n                                    <li>\r\n                                        <div className=\"row start\">\r\n                                            <div className=\"p-1\">\r\n                                                <img className=\"small\" src={user.seller.logo} alt={user.seller.name}></img>\r\n                                            </div>\r\n\r\n                                            <div className=\"p-1\">\r\n                                                <h1>{user.seller.name}</h1>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                    <li>\r\n                                        <Rating\r\n                                            rating={user.seller.rating}\r\n                                            numReviews={user.seller.numReviews}></Rating>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href={`mail to:${user.email}`}>Contact Seller</a>\r\n                                    </li>\r\n                                    <li>{user.seller.desription}</li>\r\n                                </ul>\r\n\r\n\r\n                            )\r\n                }\r\n            </div>\r\n            <div className=\"col-3\">\r\n                {\r\n                    loadingProducts ? <LoadingBox></LoadingBox>\r\n                        :\r\n                        errorProducts ? <MessageBox variant=\"danger\">{errorProducts}</MessageBox>\r\n                            :\r\n                            (\r\n                                <>\r\n                                    {products.length === 0 && (<MessageBox>No Products Found</MessageBox>)}\r\n                                    <div className=\"row\">\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <Product key={product._id} product={product}></Product>\r\n                                            ))}\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\components\\SearchBox.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\SearchScreen.js",["239","240"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { listProducts } from '../actions/productAction'\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Product from '../components/Product';\r\nimport Rating from '../components/Rating';\r\nimport { prices, ratings } from '../utils';\r\n\r\nexport default function SearchScreen(props) {\r\n\r\n    const {\r\n        name = 'all',\r\n        category = 'all',\r\n        min = 0, max = 0,\r\n        rating = 0,\r\n        order = 'newest',\r\n        pageNumber = 1\r\n    } = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productCategoryList = useSelector(state => state.productCategoryList);\r\n    const { loading: loadingCategories, error: errorCategories, categories } = productCategoryList;\r\n    useEffect(() => {\r\n        dispatch(listProducts({\r\n            pageNumber,\r\n            name: name != 'all' ? name : '',\r\n            category: category != 'all' ? category : '',\r\n            min, max, rating, order\r\n        }));\r\n    }, [dispatch, name, category, min, max, rating, order, pageNumber]);\r\n\r\n    const getFilterUrl = (filter) => {\r\n        const fitlerPage = filter.page || pageNumber;\r\n        const filterCategory = filter.category || category;\r\n        const filterName = filter.name || name;\r\n        const filterRating = filter.rating || rating;\r\n        const sortOrder = filter.order || order;\r\n        const filterMin = filter.min ? filter.min : filter.min === 0 ? 0 : min;\r\n        const filterMax = filter.max ? filter.max : filter.max === 0 ? 0 : max;\r\n\r\n\r\n        return `/search/category/${filterCategory}/name/${filterName}/min/${filterMin}/max/${filterMax}/rating/${filterRating}/order/${sortOrder}/pageNumber/${fitlerPage}`;\r\n    }\r\n    console.log('products: ', products);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                {loading ? (<LoadingBox></LoadingBox>)\r\n                    :\r\n                    error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n                        :\r\n                        <div>\r\n                            {products.length} Resaults\r\n                        </div>\r\n\r\n                }\r\n                <div>\r\n                    sort by {' '}\r\n                    <select\r\n                        value={order}\r\n                        onChange={e => {\r\n                            props.history.push(getFilterUrl({ order: e.target.value }))\r\n                        }}\r\n                    >\r\n                        <option value=\"newest\">Newest Arrivals</option>\r\n                        <option value=\"lowest\">Price: Low to High</option>\r\n                        <option value=\"highest\">Price: High to low</option>\r\n                        <option value=\"toprated\">Avg. Customer Reviews</option>\r\n                    </select>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"row top\">\r\n                <div className=\"col-1\">\r\n                    <h3>Department</h3>\r\n                    <div>\r\n                        {loadingCategories ? (<LoadingBox></LoadingBox>)\r\n                            :\r\n                            errorCategories ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n                                : (\r\n                                    <ul>\r\n                                        <li>\r\n                                            <Link\r\n                                                className={'all' === category ? 'active' : ''}\r\n                                                to={getFilterUrl({ category: 'all' })}>\r\n                                                Any\r\n                                            </Link>\r\n                                        </li>\r\n                                        {categories.map(c => (\r\n                                            <li key={c}>\r\n                                                <Link\r\n                                                    className={c === category ? 'active' : ''}\r\n                                                    to={getFilterUrl({ category: c })}>\r\n                                                    {c}\r\n                                                </Link>\r\n\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )\r\n\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <h3>Price</h3>\r\n                        <ul>\r\n                            {prices.map((p) => (\r\n                                <li key={p.name}>\r\n                                    <Link\r\n                                        className={`${p.min}-${p.max}` === `${min}-${max}` ? 'active' : ''}\r\n                                        to={getFilterUrl({ min: p.min, max: p.max })}\r\n                                    >{p.name}\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <h3>Avg. Customer Review</h3>\r\n                        <ul>\r\n                            {ratings.map((r) => (\r\n                                <li key={r.name}>\r\n                                    <Link\r\n                                        className={`${r.rating}` === rating ? 'active' : ''}\r\n                                        to={getFilterUrl({ rating: r.rating })}\r\n                                    ><Rating caption={\" & up\"} rating={r.rating}></Rating>\r\n                                    </Link>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    {loading ? (<LoadingBox></LoadingBox>)\r\n                        :\r\n                        error ? (<MessageBox variant=\"danger\">{error}</MessageBox>)\r\n                            : (\r\n                                <>\r\n                                    {\r\n                                        products.length === 0 &&\r\n                                        <MessageBox>No Product Found</MessageBox>\r\n                                    }\r\n                                    <div className=\"row center\">\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <Product key={product._id} product={product}></Product>\r\n                                            ))}\r\n                                    </div>\r\n                                    <div className=\"row center pagination\">\r\n                                        {\r\n                                            [...Array(pages).keys()].map(x => (\r\n                                                <Link className={(x + 1) === page ? 'active' : ''} key={x + 1} to={getFilterUrl({ page: x + 1 })}>\r\n                                                    {x + 1}\r\n                                                </Link>\r\n                                            ))\r\n                                        }\r\n                                    </div>\r\n                                </>\r\n                            )\r\n\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\dev\\react\\amazona\\frontend\\src\\utils.js",[],"C:\\dev\\react\\amazona\\frontend\\src\\screens\\MapScreen.js",["241"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GoogleMap, LoadScript, Marker, StandaloneSearchBox } from '../../node_modules/@react-google-maps/api/dist/index'\r\nimport Axios from '../../node_modules/axios/index';\r\nimport LoadingBox from '../components/LoadingBox'\r\nimport { USER_ADDRESS_MAP_CONFIRM } from '../constants/userConstants';\r\n\r\nconst libs = ['places'];\r\nconst defaultLocation = { lat: 45.517, lng: -73.56 };\r\n\r\nexport default function MapScreen(props) {\r\n\r\n\r\n    const [googleApiKey, setGoogleApiKey] = useState('');\r\n    //center is for the marker\r\n    const [center, setCenter] = useState(defaultLocation);\r\n    //location is for the map\r\n    const [location, setLocation] = useState(center);\r\n\r\n    const mapRef = useRef(null);\r\n    const placeRef = useRef(null);\r\n    const markerRef = useRef(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n            const { data } = await Axios('api/config/google');\r\n            setGoogleApiKey(data);\r\n            getUserCurrentLocation();\r\n        };\r\n        fetch();\r\n    }, [googleApiKey]);\r\n\r\n    const onLoad = (map) => {\r\n        mapRef.current = map;\r\n    }\r\n\r\n    const onLoadMarker = (marker) => {\r\n        markerRef.current = marker;\r\n    }\r\n\r\n    const onLoadPlaces = (place) => {\r\n        placeRef.current = place;\r\n    }\r\n\r\n    const onIdle = () => {\r\n        setLocation({\r\n            lat: mapRef.current.center.lat(),\r\n            lng: mapRef.current.center.lng(),\r\n        })\r\n    }\r\n\r\n    const onPlacesChanged = () => {\r\n        const place = placeRef.current.getPlaces()[0].geometry.location;\r\n        setCenter({ lat: place.lat(), lng: place.lng() });\r\n        setLocation({ lat: place.lat(), lng: place.lng() });\r\n    }\r\n    const dispatch = useDispatch();\r\n    const onConfirm = () => {\r\n        const places = placeRef.current.getPlaces();\r\n        if (places && places.length === 1) {\r\n            // dispatch select action\r\n            dispatch({\r\n                type: USER_ADDRESS_MAP_CONFIRM,\r\n                payload: {\r\n                    lat: location.lat,\r\n                    lng: location.lng,\r\n                    address: places[0].formatted_address,\r\n                    name: places[0].name,\r\n                    vicinity: places[0].vicinity,\r\n                    googleAddressId: places[0].id,\r\n                }\r\n            });\r\n            alert('Location selected successfully.')\r\n            props.history.push('/shipping');\r\n        } else {\r\n            alert('Please enter your adress.')\r\n        }\r\n    }\r\n\r\n    const getUserCurrentLocation = () => {\r\n        if (!navigator.geolocation) {\r\n            alert('Geolocation os not supported by this browser');\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                setCenter({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                });\r\n                setLocation({\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return googleApiKey ?\r\n        (<div className=\"full-container\">\r\n            <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\r\n                <GoogleMap\r\n                    id=\"sample-map\"\r\n                    mapContainerStyle={{ height: '100%', width: '100%' }}\r\n                    center={center}\r\n                    zoom={15}\r\n                    onLoad={onLoad}\r\n                    onIdle={onIdle}\r\n                >\r\n                    <StandaloneSearchBox\r\n                        onLoad={onLoadPlaces}\r\n                        onPlacesChanged={onPlacesChanged}\r\n                    >\r\n                        <div class=\"map-input-box\">\r\n                            <input type=\"text\" placeholder=\"Enter your adress\"></input>\r\n                            <button type=\"button\" className=\"primary\" onClick={onConfirm}>Confirm</button>\r\n                        </div>\r\n                    </StandaloneSearchBox>\r\n                    <Marker position={location} onLoad={onLoadMarker}></Marker>\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>) : (<LoadingBox></LoadingBox>)\r\n}\r\n",{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":22,"column":10,"nodeType":"248","messageId":"249","endLine":22,"endColumn":19},{"ruleId":"246","severity":1,"message":"250","line":30,"column":33,"nodeType":"248","messageId":"249","endLine":30,"endColumn":45},{"ruleId":"246","severity":1,"message":"251","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":23},{"ruleId":"246","severity":1,"message":"252","line":4,"column":8,"nodeType":"248","messageId":"249","endLine":4,"endColumn":12},{"ruleId":"246","severity":1,"message":"253","line":8,"column":129,"nodeType":"248","messageId":"249","endLine":8,"endColumn":153},{"ruleId":"246","severity":1,"message":"254","line":2,"column":217,"nodeType":"248","messageId":"249","endLine":2,"endColumn":237},{"ruleId":"246","severity":1,"message":"255","line":104,"column":17,"nodeType":"248","messageId":"249","endLine":104,"endColumn":21},{"ruleId":"246","severity":1,"message":"256","line":1,"column":198,"nodeType":"248","messageId":"249","endLine":1,"endColumn":217},{"ruleId":"246","severity":1,"message":"257","line":2,"column":28,"nodeType":"248","messageId":"249","endLine":2,"endColumn":43},{"ruleId":"246","severity":1,"message":"258","line":30,"column":18,"nodeType":"248","messageId":"249","endLine":30,"endColumn":32},{"ruleId":"246","severity":1,"message":"259","line":31,"column":16,"nodeType":"248","messageId":"249","endLine":31,"endColumn":28},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"261","line":7,"column":32,"nodeType":"248","messageId":"249","endLine":7,"endColumn":54},{"ruleId":"262","severity":1,"message":"263","line":36,"column":8,"nodeType":"264","endLine":36,"endColumn":105,"suggestions":"265"},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"266","line":19,"column":37,"nodeType":"248","messageId":"249","endLine":19,"endColumn":41},{"ruleId":"262","severity":1,"message":"267","line":31,"column":8,"nodeType":"264","endLine":31,"endColumn":45,"suggestions":"268"},{"ruleId":"246","severity":1,"message":"269","line":22,"column":11,"nodeType":"248","messageId":"249","endLine":22,"endColumn":22},{"ruleId":"246","severity":1,"message":"270","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":27},{"ruleId":"262","severity":1,"message":"271","line":37,"column":8,"nodeType":"264","endLine":37,"endColumn":47,"suggestions":"272"},{"ruleId":"246","severity":1,"message":"260","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"273","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":14},{"ruleId":"274","severity":1,"message":"275","line":31,"column":24,"nodeType":"276","messageId":"277","endLine":31,"endColumn":26},{"ruleId":"274","severity":1,"message":"275","line":32,"column":32,"nodeType":"276","messageId":"277","endLine":32,"endColumn":34},{"ruleId":"246","severity":1,"message":"278","line":2,"column":23,"nodeType":"248","messageId":"249","endLine":2,"endColumn":34},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'addToCart' is defined but never used.","Identifier","unusedVar","'listProducts' is defined but never used.","'createProduct' is defined but never used.","'data' is defined but never used.","'userTopSellerListReducer' is defined but never used.","'PRODUCT_CREATE_RESET' is defined but never used.","'data' is assigned a value but never used.","'USER_DETAILS_SUCESS' is defined but never used.","'USER_RESET_FAIL' is defined but never used.","'loadingDeliver' is assigned a value but never used.","'errorDeliver' is assigned a value but never used.","'Component' is defined but never used.","'PRODUCT_DELETE_SUCCESS' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sellerMode'. Either include it or remove the dependency array.","ArrayExpression",["281"],"'page' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'sellerMode' and 'userInfo._id'. Either include them or remove the dependency array.",["282"],"'editHandler' is assigned a value but never used.","'userDeleteReducer' is defined but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["283"],"'rating' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [dispatch, createdProduct, props.history, successCreate, successDelete, userInfo._id, pageNumber, sellerMode]",{"range":"290","text":"291"},"Update the dependencies array to be: [dispatch, successDelete, pageNumber, sellerMode, userInfo._id]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch, user, userId, successUpdate, props.history]",{"range":"294","text":"295"},[1666,1763],"[dispatch, createdProduct, props.history, successCreate, successDelete, userInfo._id, pageNumber, sellerMode]",[1285,1322],"[dispatch, successDelete, pageNumber, sellerMode, userInfo._id]",[1428,1467],"[dispatch, user, userId, successUpdate, props.history]"]